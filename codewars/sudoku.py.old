### Ill just start from scratch


puzzle = [[5,3,0,0,7,0,0,0,0],
          [6,0,0,1,9,5,0,0,0],
          [0,9,8,0,0,0,0,6,0],
          [8,0,0,0,6,0,0,0,3],
          [4,0,0,8,0,3,0,0,1],
          [7,0,0,0,2,0,0,0,6],
          [0,6,0,0,0,0,2,8,0],
          [0,0,0,4,1,9,0,0,5],
          [0,0,0,0,8,0,0,7,9]]

def sudoku():
    """return the solved puzzle as a 2d array of 9 x 9"""
    
    for i, row in enumerate(puzzle):
        for j, number in enumerate(row):
            if number != 0:
                continue
            numbers = list(set_numbers(puzzle, i, j))
            if not numbers:
                
            puzzle[i][j] = numbers[0]
            print(row)
       
    return puzzle

def get_square(puzzle, row_index, col_index):
    start_row = row_index // 3 * 3
    start_col = col_index // 3 * 3
    square = set()
    for i in range(3):
        for j in range(3):
            square.add(puzzle[start_row + i][start_col + j])
    return square

def set_numbers(puzzle, row_index, col_index):
    numbers = set(range(1, 10))
    row = set(puzzle[row_index])
    col = {row[col_index] for row in puzzle}
    square = get_square(puzzle, row_index, col_index)
    numbers.difference_update(row, col, square)
    # print("-.-.-.-.-.-.-.-.-.-.-")
    # print(row)
    # print("-.-.-.-.-.-.-.-.-.-.-")
    # print(col)
    # print("-.-.-.-.-.-.-.-.-.-.-")
    # print(square)
    # print("-.-.-.-.-.-.-.-.-.-.-")
    # print(numbers)
    return numbers


    



if __name__ == "__main__":
    sudoku()

